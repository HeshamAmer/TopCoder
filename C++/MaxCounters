#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <string>
#include <memory>
#include <stdio.h>
#include <iostream>
#include <cmath>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <sstream>
#include <bitset>
#include <numeric>
#include <cstdlib>
#include <cctype>
#include <cstring>
typedef long long ll;
using namespace std;
 

//
vector<int> solution(int N, vector<int> &A) {
    // write your code in C++11
	int maxVal=0;
	bool lastOperationMax=true;
	int* V=new int [N];
	for (int i=0;i<A.size();i++){
		if (A[i]>N){//max counter
			if (!lastOperationMax){
				memset(V,maxVal,sizeof(V));
			}
			lastOperationMax=true;
		}
		else {
			V[A[i]-1]++;
			lastOperationMax=false;
			if (V[A[i]-1]>maxVal)
				maxVal=V[A[i]-1];
		}
	}
	vector<int> res(V,V+N);
	return res;
}
int main(){
	int ar[]={2,1,1,2,1};
	
	vector<int> V(begin(ar),end(ar));
	solution(1,V);
	return 0;
}
